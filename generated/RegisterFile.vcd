$date
2023-10-25T15:16+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module RegisterFile $end
 $var wire 32 ! registerFile_2 $end
 $var wire 32 " _GEN_37 $end
 $var wire 32 # _GEN_22 $end
 $var wire 32 $ _GEN_43 $end
 $var wire 32 % _GEN_2 $end
 $var wire 32 & _GEN_10 $end
 $var wire 32 ' registerFile_5 $end
 $var wire 4 ( _T $end
 $var wire 32 ) _GEN_25 $end
 $var wire 32 * _GEN_19 $end
 $var wire 32 + registerFile_8 $end
 $var wire 32 , _GEN_5 $end
 $var wire 32 - io_readData1 $end
 $var wire 32 . _GEN_13 $end
 $var wire 32 / registerFile_10 $end
 $var wire 32 0 _GEN_8 $end
 $var wire 32 1 _GEN_42 $end
 $var wire 32 2 _GEN_39 $end
 $var wire 32 3 _GEN_30 $end
 $var wire 32 4 _GEN_24 $end
 $var wire 32 5 registerFile_13 $end
 $var wire 5 6 io_readReg2 $end
 $var wire 32 7 _GEN_45 $end
 $var wire 32 8 registerFile_7 $end
 $var wire 32 9 _GEN_27 $end
 $var wire 32 : _GEN_33 $end
 $var wire 32 ; _GEN_12 $end
 $var wire 32 < _GEN_7 $end
 $var wire 32 = registerFile_1 $end
 $var wire 32 > _GEN_36 $end
 $var wire 32 ? _GEN_21 $end
 $var wire 32 @ registerFile_12 $end
 $var wire 32 A registerFile_4 $end
 $var wire 32 B _GEN_18 $end
 $var wire 32 C _GEN_1 $end
 $var wire 32 D registerFile_15 $end
 $var wire 32 E _GEN_4 $end
 $var wire 1 F io_regWrite $end
 $var wire 32 G _GEN_41 $end
 $var wire 32 H _GEN_35 $end
 $var wire 1 I clock $end
 $var wire 32 J registerFile_3 $end
 $var wire 32 K io_writeData $end
 $var wire 32 L _GEN_23 $end
 $var wire 32 M _GEN_44 $end
 $var wire 32 N _GEN_38 $end
 $var wire 5 O io_readReg1 $end
 $var wire 5 P io_writeReg $end
 $var wire 32 Q _GEN_17 $end
 $var wire 32 R _GEN_26 $end
 $var wire 32 S _GEN_32 $end
 $var wire 32 T registerFile_6 $end
 $var wire 32 U _GEN_47 $end
 $var wire 32 V _GEN_11 $end
 $var wire 32 W io_readData2 $end
 $var wire 32 X registerFile_0 $end
 $var wire 32 Y _GEN_20 $end
 $var wire 32 Z _GEN_29 $end
 $var wire 32 [ registerFile_9 $end
 $var wire 32 \ _GEN_14 $end
 $var wire 32 ] _GEN_6 $end
 $var wire 32 ^ _GEN_9 $end
 $var wire 32 _ registerFile_11 $end
 $var wire 32 ` registerFile_14 $end
 $var wire 1 a reset $end
 $var wire 32 b _GEN_3 $end
 $var wire 32 c _GEN_46 $end
 $var wire 32 d _GEN_34 $end
 $var wire 32 e _GEN_28 $end
 $var wire 32 f _GEN_40 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 D
b00000000000000000000000000000000 <
b00000 P
b00000000000000000000000000000000 '
b00000000000000000000000000000000 [
b00000000000000000000000000000000 S
b00000000000000000000000000000000 >
b00000000000000000000000000000000 !
b00000000000000000000000000000000 U
b00000000000000000000000000000000 8
b00000000000000000000000000000000 #
b00000000000000000000000000000000 :
b00000000000000000000000000000000 2
b00000000000000000000000000000000 f
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 4
b00000000000000000000000000000000 `
b00000000000000000000000000000000 K
b00000000000000000000000000000000 .
b00000000000000000000000000000000 b
b00000000000000000000000000000000 M
0a
b00000000000000000000000000000000 E
b00000000000000000000000000000000 0
b00000000000000000000000000000000 d
b00000000000000000000000000000000 \
b00000000000000000000000000000000 G
0F
b00000000000000000000000000000000 *
b00000 6
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 A
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 $
b00000000000000000000000000000000 X
b00000000000000000000000000000000 C
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 &
b00000 O
b00000000000000000000000000000000 Z
b0000 (
b00000000000000000000000000000000 =
b00000000000000000000000000000000 T
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 7
b00000000000000000000000000000000 "
b00000000000000000000000000000000 V
b00000000000000000000000000000000 N
b00000000000000000000000000000000 9
b00000000000000000000000000000000 e
b00000000000000000000000000000000 3
b00000000000000000000000000000000 R
0I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 5
b00000000000000000000000000000000 L
b00000000000000000000000000000000 /
b00000000000000000000000000000000 c
b00000000000000000000000000000000 1
b00000000000000000000000000000000 )
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 H
b00000000000000000000000000000000 @
b00000000000000000000000000000000 +
b00000000000000000000000000000000 _
b00000000000000000000000000000000 W
b00000000000000000000000000000000 B
b00000000000000000000000000000000 -
b00000000000000000000000000000000 %
$end
#0
1a
#1
1I
#6
0I
#11
1I
#16
0I
#21
1I
#26
0I
#31
1I
#36
0I
#41
1I
#46
1F
b00000000000000000000000000010100 K
b00010 6
0a
b00001 O
0I
b0001 (
b00000000000000000000000000010100 :
b00001 P
#51
b00000000000000000000000000010100 -
b00000000000000000000000000010100 <
b00000000000000000000000000010100 %
b00000000000000000000000000010100 C
b00000000000000000000000000010100 .
b00000000000000000000000000010100 &
b00000000000000000000000000010100 E
b00000000000000000000000000010100 =
b00000000000000000000000000010100 b
b00000000000000000000000000010100 \
b00000000000000000000000000010100 0
b00000000000000000000000000010100 V
b00000000000000000000000000010100 ]
b00000000000000000000000000010100 ^
1I
b00000000000000000000000000010100 ,
b00000000000000000000000000010100 ;
#56
0I
